{"version":3,"sources":["components/Alert.js","constants/templateConstant.js","components/Form.js","actions/templateAction.js","components/Template.js","constants/paginationConstant.js","components/Pagination.js","actions/paginationAction.js","App.js","store.js","reducers/templateReducer.js","reducers/paginationReducer.js","index.js"],"names":["Alert","className","TEMPLATE_REQUEST","TEMPLATE_SUCCESS","TEMPLATE_FAIL","SEARCH_NAME","ORDER_NAME","ORDER_DATE","ORDER_CATEGORY","Form","orders","dispatch","useDispatch","activeTemplates","useSelector","state","template","categories","Set","map","category","join","split","type","placeholder","onChange","e","text","target","value","ACTION","payload","index","name","order","Template","useEffect","a","Axios","get","data","message","loading","pagination","currentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","length","current","link","description","href","NEXT_PAGE","PREVIOUS_PAGE","Pagination","pages","Math","ceil","onClick","App","reducer","combineReducers","templates","action","orderSort","property","b","error","search","filter","includes","orderCategory","orderName","sort","orderDate","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83c58f6a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Alert.css';\r\n\r\nfunction Alert() {\r\n  return (\r\n    <div className=\"alert\">\r\n      <p className=\"alert-p\">\r\n        Tada! Get started with a free template. Canâ€™t find what you are looking\r\n        for? Search from the 1000+ available templates\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","export const TEMPLATE_REQUEST = 'TEMPLATE_REQUEST';\r\nexport const TEMPLATE_SUCCESS = ' TEMPLATE_SUCCESS';\r\nexport const TEMPLATE_FAIL = ' TEMPLATE_FAIL';\r\nexport const SEARCH_NAME = 'SEARCH_NAME';\r\nexport const ORDER_NAME = 'ORDER_NAME';\r\nexport const ORDER_DATE = 'ORDER_DATE';\r\nexport const ORDER_CATEGORY = 'ORDER_CATEGORY';\r\n","import React from 'react';\r\nimport './Form.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  searchName,\r\n  orderName,\r\n  orderDate,\r\n  orderCategory,\r\n} from '../actions/templateAction';\r\n\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nfunction Form() {\r\n  const orders = ['Default', 'Ascending', 'Descending'];\r\n  const dispatch = useDispatch();\r\n  const { activeTemplates } = useSelector((state) => state.template);\r\n  const categories = [\r\n    'All',\r\n    ...new Set(\r\n      activeTemplates\r\n        .map((template) => template.category)\r\n        .join(',')\r\n        .split(',')\r\n    ),\r\n  ];\r\n\r\n  const searchChange = (e) => {\r\n    dispatch(searchName(e.target.value));\r\n  };\r\n  const orderChangeName = (e) => {\r\n    dispatch(orderName(e.target.value));\r\n  };\r\n  const orderChangeDate = (e) => {\r\n    dispatch(orderDate(e.target.value));\r\n  };\r\n  const orderChangeCategory = (e) => {\r\n    dispatch(orderCategory(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"search_form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Template\"\r\n          onChange={searchChange}\r\n        />\r\n        <p>\r\n          <FaSearch />\r\n        </p>\r\n      </div>\r\n      <div className=\"sort_form\">\r\n        <p className=\"sort_out sort_by\">Sort by:</p>\r\n        <div className=\"sort_out\">\r\n          <fieldset>\r\n            <legend>Category</legend>\r\n            <select className=\"sort_select\" onChange={orderChangeCategory}>\r\n              {categories.map((category, index) => {\r\n                return (\r\n                  <option key={index} value={category}>\r\n                    {category}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </fieldset>\r\n        </div>\r\n        <div className=\"sort_out\">\r\n          <fieldset>\r\n            <legend>Order</legend>\r\n\r\n            <select className=\"sort_select\" onChange={orderChangeName}>\r\n              {orders.map((order, index) => {\r\n                return (\r\n                  <option key={index} value={order}>\r\n                    {order}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </fieldset>\r\n        </div>\r\n        <div className=\"sort_out\">\r\n          <fieldset>\r\n            <legend>Date</legend>\r\n            <select className=\"sort_select\" onChange={orderChangeDate}>\r\n              {orders.map((order, index) => {\r\n                return (\r\n                  <option key={index} value={order}>\r\n                    {order}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import * as ACTION from '../constants/templateConstant';\r\nimport Axios from 'axios';\r\n\r\nexport const fetchTemplate = (text) => async (dispatch) => {\r\n  dispatch({\r\n    type: ACTION.TEMPLATE_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `https://front-end-task-dot-fpls-dev.uc.r.appspot.com/api/v1/public/task_templates`\r\n    );\r\n    dispatch({ type: ACTION.TEMPLATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ACTION.TEMPLATE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const searchName = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: ACTION.SEARCH_NAME,\r\n    payload: text,\r\n  });\r\n};\r\nexport const orderCategory = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: ACTION.ORDER_CATEGORY,\r\n    payload: text,\r\n  });\r\n};\r\nexport const orderName = (name) => (dispatch) => {\r\n  dispatch({\r\n    type: ACTION.ORDER_NAME,\r\n    payload: name,\r\n  });\r\n};\r\nexport const orderDate = (name) => (dispatch) => {\r\n  dispatch({\r\n    type: ACTION.ORDER_DATE,\r\n    payload: name,\r\n  });\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport './Template.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchTemplate } from '../actions/templateAction';\r\n\r\nfunction Template() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchTemplate());\r\n  }, [dispatch]);\r\n  const { activeTemplates, loading, text } = useSelector(\r\n    (state) => state.template\r\n  );\r\n  const { currentPage, postsPerPage } = useSelector(\r\n    (state) => state.pagination\r\n  );\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = activeTemplates?.slice(\r\n    indexOfFirstPost,\r\n    indexOfLastPost\r\n  );\r\n\r\n  return (\r\n    <div className=\"template\">\r\n      {loading ? (\r\n        <h2 className=\"loading\">loading....</h2>\r\n      ) : (\r\n        <div>\r\n          <div className=\"template_header\">\r\n            <h2>{text ? text : 'All'} Template</h2>\r\n\r\n            <p>{activeTemplates.length} Template Found</p>\r\n          </div>\r\n          <div className=\"template_body\">\r\n            {currentPosts?.map((current) => {\r\n              const { name, link, description } = current;\r\n              return (\r\n                <div className=\"template_body_container\">\r\n                  <div className=\"template_body_details\">\r\n                    <h1>{name}</h1>\r\n                    <p>{description}</p>\r\n                  </div>\r\n                  <div className=\"template_body_link\">\r\n                    <a href={link}>Use Template</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Template;\r\n","export const NEXT_PAGE = 'NEXT_PAGE';\r\nexport const PREVIOUS_PAGE = ' PREVIOUS_PAGE';\r\nexport const PAGENATION = ' PAGENATION';\r\n","import React from 'react';\r\nimport './Pagination.css';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { nextpage, prevpage } from '../actions/paginationAction';\r\n\r\nfunction Pagination() {\r\n  const { activeTemplates, loading } = useSelector((state) => state.template);\r\n  const { currentPage, postsPerPage } = useSelector(\r\n    (state) => state.pagination\r\n  );\r\n  let pages = Math.ceil(activeTemplates.length / postsPerPage);\r\n  const dispatch = useDispatch();\r\n\r\n  function goToNextPage() {\r\n    dispatch(nextpage());\r\n  }\r\n\r\n  function goToPreviousPage() {\r\n    dispatch(prevpage());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        ''\r\n      ) : (\r\n        <div className=\"pagination\">\r\n          <button\r\n            onClick={goToPreviousPage}\r\n            className={`prev-btn ${currentPage === 1 ? 'disabled' : ''}`}\r\n          >\r\n            {currentPage === 1 ? '' : <ArrowBackIosIcon className=\"page-btn\" />}\r\n            Previous\r\n          </button>\r\n          <div className=\"pages\">\r\n            <button>{currentPage}</button>\r\n            <p>of</p>\r\n            <button className=\"total_pages\">{pages}</button>\r\n          </div>\r\n          <button\r\n            onClick={goToNextPage}\r\n            className={`prev_btn ${currentPage === pages ? 'disabled' : ''}`}\r\n          >\r\n            Next\r\n            {currentPage === pages ? (\r\n              ''\r\n            ) : (\r\n              <ArrowForwardIosIcon className=\"page-btn\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Pagination;\r\n","import * as ACTION from '../constants/paginationConstant';\r\n\r\nexport const nextpage = () => {\r\n  return { type: ACTION.NEXT_PAGE };\r\n};\r\n\r\nexport const prevpage = () => {\r\n  return { type: ACTION.PREVIOUS_PAGE };\r\n};\r\n","import './App.css';\nimport Alert from './components/Alert';\nimport Form from './components/Form';\nimport Template from './components/Template';\nimport React from 'react';\nimport Pagination from './components/Pagination';\n\nfunction App() {\n  return (\n    <div>\n      <Form />\n      <Alert />\n      <Template />\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { paginationPageReducer } from './reducers/paginationReducer';\r\nimport { templateListReducer } from './reducers/templateReducer';\r\n\r\nconst reducer = combineReducers({\r\n  template: templateListReducer,\r\n  pagination: paginationPageReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import * as ACTION from '../constants/templateConstant';\r\n\r\nexport const templateListReducer = (\r\n  state = { loading: true, templates: [], activeTemplates: [], text: 'All' },\r\n  action\r\n) => {\r\n  function orderSort(property, order) {\r\n    return function (a, b) {\r\n      if (order === 'Ascending' && a[property] < b[property]) {\r\n        return -1;\r\n      } else if (order === 'Ascending' && a[property] > b[property]) {\r\n        return 1;\r\n      } else if (order === 'Descending' && a[property] > b[property]) {\r\n        return -1;\r\n      } else if (order === 'Descending' && a[property] < b[property]) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    };\r\n  }\r\n  switch (action.type) {\r\n    case ACTION.TEMPLATE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ACTION.TEMPLATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        templates: action.payload,\r\n        activeTemplates: action.payload,\r\n        text: 'All',\r\n      };\r\n    case ACTION.TEMPLATE_FAIL:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    case ACTION.SEARCH_NAME:\r\n      let search = state.templates.filter((template) =>\r\n        template.name.includes(action.payload)\r\n      );\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        activeTemplates: search,\r\n      };\r\n    case ACTION.ORDER_CATEGORY:\r\n      let orderCategory = state.templates.filter((template) => {\r\n        if (action.payload === 'All') {\r\n          return template;\r\n        } else {\r\n          return template.category.includes(action.payload);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false,\r\n        activeTemplates: orderCategory,\r\n      };\r\n\r\n    case ACTION.ORDER_NAME:\r\n      let orderName = state.templates.filter((template) =>\r\n        state.text === 'All' || template.category.includes(state.text)\r\n          ? template\r\n          : null\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        activeTemplates: orderName.sort(orderSort('name', action.payload)),\r\n      };\r\n    case ACTION.ORDER_DATE:\r\n      let orderDate = state.templates.sort(\r\n        orderSort('created', action.payload)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        text: state.text,\r\n        loading: false,\r\n        activeTemplates: orderDate,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ACTION from '../constants/paginationConstant';\r\n\r\nexport const paginationPageReducer = (\r\n  state = { currentPage: 1, postsPerPage: 15 },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ACTION.NEXT_PAGE:\r\n      return { ...state, currentPage: state.currentPage + 1 };\r\n    case ACTION.PREVIOUS_PAGE:\r\n      return { ...state, currentPage: state.currentPage - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}